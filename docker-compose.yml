version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: prowler-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-prowler_db}
      POSTGRES_USER: ${POSTGRES_USER:-prowler_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-prowler_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - prowler-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-prowler_user} -d ${POSTGRES_DB:-prowler_db}"]
      interval: 30s
      timeout: 10s
      retries: 5
    command: >
      sh -c "
        echo 'CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";' > /docker-entrypoint-initdb.d/01-extensions.sql &&
        echo 'GRANT ALL PRIVILEGES ON DATABASE prowler_db TO prowler_user;' > /docker-entrypoint-initdb.d/02-permissions.sql &&
        docker-entrypoint.sh postgres
      "

  app:
    build:
      context: https://github.com/pranavanil47/prowlerdash.git
      dockerfile: Dockerfile
    container_name: prowler-app
    depends_on:
      postgres:
        condition: service_healthy
      db-setup:
        condition: service_completed_successfully
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SESSION_SECRET: ${SESSION_SECRET}
      PORT: ${PORT:-5000}
      NODE_ENV: ${NODE_ENV:-production}
      TRUST_PROXY: "true"
      COOKIE_SECURE: "false"
    expose:
      - "5000"
    volumes:
      - app_logs:/app/logs
    networks:
      - prowler-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: prowler-nginx
    depends_on:
      app:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_certs:/etc/nginx/certs
      - nginx_logs:/var/log/nginx
    networks:
      - prowler-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      sh -c "
        if [ ! -f /etc/nginx/certs/cert.pem ]; then
          echo 'Generating SSL certificates...'
          apk add --no-cache openssl
          mkdir -p /etc/nginx/certs
          openssl genrsa -out /etc/nginx/certs/key.pem 2048
          openssl req -new -key /etc/nginx/certs/key.pem -out /etc/nginx/certs/cert.csr -subj '/C=US/ST=State/L=City/O=Organization/CN=localhost'
          openssl x509 -req -in /etc/nginx/certs/cert.csr -signkey /etc/nginx/certs/key.pem -out /etc/nginx/certs/cert.pem -days 365
          rm /etc/nginx/certs/cert.csr
          echo 'SSL certificates generated successfully!'
        fi
        nginx -g 'daemon off;'
      "

  # Database initialization service
  db-setup:
    build:
      context: https://github.com/pranavanil47/prowlerdash.git
      dockerfile: Dockerfile
    container_name: prowler-db-setup
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SESSION_SECRET: ${SESSION_SECRET}
    networks:
      - prowler-network
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 10 &&
        echo 'Initializing database schema and admin user...' &&
        node scripts/init-db.js &&
        echo 'Database initialization completed!'
      "
    restart: "no"

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local
  nginx_certs:
    driver: local
  nginx_logs:
    driver: local

networks:
  prowler-network:
    driver: bridge